let baseUrl = "https://helix.autonom8.com/vodafone";
let threegThroughputUri = "/3gthroughput";

function doTask(params, state) {
    console.log("Called 3GThroughPut Service");
    return new Promise((resolve, reject) => {
        let url = baseUrl + threegThroughputUri;
        let config = {
            "json": true,
            "method": 'GET'
        };

        axios(url, config).then(Response => {
            console.log("Got thrregThroughput response:", Response.data);
            resolve({
                "threegThroughputData": Response.data
            });
        }).catch(error => {
            console.log(error);
            console.log("error in threegThroughPut response");
            resolve({
                "error": true
            });
        });
    });
}

function doTask(params, state) {
    return new Promise((resolve, reject) => {
        if (params.threegThroughputData) {
            console.log(params.threegThroughputData, "service handler");
            let throughputTable = {
                "msgType": "datatable",
                "msg": {
                    "text": "Throughput Table",
                    "subText": "",
                    "header": [{
                        "name": "Counter Name"
                    }, ],
                    "rows": []
                }
            };
            let threegThroughPut = params.threegThroughputData;
            let headerArray = [];
            console.log("threegThroughPut", params.threegThroughputData);
            for (var key in threegThroughPut.result[0]) {
                if (key !== "Object" && key !== "Counter") {
                    throughputTable.msg.header.push({
                        "name": key
                    });
                    headerArray.push(key);
                }
            }
            for (let iter = 0; iter < threegThroughPut.result.length; iter++) {
                throughputTable.msg.rows.push({
                    "data": [
                        threegThroughPut.result[iter].Counter,
                    ]
                });
            }
            for (let iter = 0; iter < threegThroughPut.result.length; iter++) {
                for (let j = 0; j < headerArray.length; j++) {
                  console.log("Value:",threegThroughPut.result[iter][headerArray[j]]);
                  console.log("Data:",throughputTable.msg.rows[iter].data);
                    throughputTable.msg.rows[iter].data.push(
                        threegThroughPut.result[iter][headerArray[j]]
                    );
                }
            }
            console.log("throughputTable", JSON.stringify(throughputTable));
            resolve({
                throughputTable: JSON.stringify(throughputTable),
            });
        } else if (params.error) {
            resolve({
                throughputTable: null
            });
        }
    });
}